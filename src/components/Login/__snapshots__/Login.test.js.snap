// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should exist 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    logOut={[Function]}
    user={
        Object {
            "userEmail": "Jordan@Project.com",
            "userId": "fancy encryption",
            "userName": "Jordan",
            "userPhoto": "photo-url",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <h1>
                 WELCOME
        </h1>
        <h3
                className="name"
        >
                Jordan
                 
        </h3>
        <img
                alt="user"
                className="profile-picture"
                src="photo-url"
        />
        <button
                className="logout"
                onClick={[Function]}
        >
                 LOG OUT
        </button>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
             WELCOME
</h1>,
          <h3
            className="name"
>
            Jordan
             
</h3>,
          <img
            alt="user"
            className="profile-picture"
            src="photo-url"
/>,
          <button
            className="logout"
            onClick={[Function]}
>
             LOG OUT
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " WELCOME",
          },
          "ref": null,
          "rendered": " WELCOME",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Jordan",
              " ",
            ],
            "className": "name",
          },
          "ref": null,
          "rendered": Array [
            "Jordan",
            " ",
          ],
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "user",
            "className": "profile-picture",
            "src": "photo-url",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " LOG OUT",
            "className": "logout",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": " LOG OUT",
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <h1>
                     WELCOME
          </h1>
          <h3
                    className="name"
          >
                    Jordan
                     
          </h3>
          <img
                    alt="user"
                    className="profile-picture"
                    src="photo-url"
          />
          <button
                    className="logout"
                    onClick={[Function]}
          >
                     LOG OUT
          </button>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
               WELCOME
</h1>,
            <h3
              className="name"
>
              Jordan
               
</h3>,
            <img
              alt="user"
              className="profile-picture"
              src="photo-url"
/>,
            <button
              className="logout"
              onClick={[Function]}
>
               LOG OUT
</button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " WELCOME",
            },
            "ref": null,
            "rendered": " WELCOME",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Jordan",
                " ",
              ],
              "className": "name",
            },
            "ref": null,
            "rendered": Array [
              "Jordan",
              " ",
            ],
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "user",
              "className": "profile-picture",
              "src": "photo-url",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " LOG OUT",
              "className": "logout",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": " LOG OUT",
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
